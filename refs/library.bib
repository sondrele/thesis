Automatically generated by Mendeley Desktop 1.13.3
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Options -> BibTeX in Mendeley Desktop

@misc{an0014_timer,
author = {Note, Application},
file = {:home/sondre/Downloads/thesis/an0014\_efm32\_timer.pdf:pdf},
title = {{AN0014 - Application Note}}
}

@article{Grossman2002,
abstract = {Cyclone is a type-safe programming language derived from C. The primary design goal of Cyclone is to let programmers control data representation and memory management without sacrificing type-safety. In this paper, we focus on the region-based memory management of Cyclone and its static typing discipline. The design incorporates several advancements, including support for region subtyping and a coherent integration with stack allocation and a garbage collector. To support separate compilation, Cyclone requires programmers to write some explicit region annotations, but a combination of default annotations, local type inference, and a novel treatment of region effects reduces this burden. As a result, we integrate C idioms in a region-based framework. In our experience, porting legacy C to Cyclone has required altering about 8\% of the code; of the changes, only 6\% (of the 8\%) were region annotations.},
author = {Grossman, Dan and Morrisett, Greg and Jim, Trevor and Hicks, Michael and Wang, Yanling and Cheney, James},
doi = {10.1145/543552.512563},
file = {:home/sondre/Downloads/thesis/cyclone-regions.pdf:pdf},
isbn = {1581134630},
issn = {03621340},
journal = {ACM SIGPLAN Notices},
pages = {282},
title = {{Region-based memory management in cyclone}},
volume = {37},
year = {2002}
}
